// this file was generated by gomacro command: import _i "gioui.org/widget/material"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package giopkgs

import (
	r "reflect"
	"github.com/cosmos72/gomacro/imports"
	material "gioui.org/widget/material"
)

// reflection: allow interpreted code to import "gioui.org/widget/material"
func init() {
	imports.Packages["gioui.org/widget/material"] = imports.Package{
	Name: "material",
	Binds: map[string]r.Value{
		"Body1":	r.ValueOf(material.Body1),
		"Body2":	r.ValueOf(material.Body2),
		"Button":	r.ValueOf(material.Button),
		"ButtonLayout":	r.ValueOf(material.ButtonLayout),
		"Caption":	r.ValueOf(material.Caption),
		"CheckBox":	r.ValueOf(material.CheckBox),
		"Clickable":	r.ValueOf(material.Clickable),
		"Editor":	r.ValueOf(material.Editor),
		"H1":	r.ValueOf(material.H1),
		"H2":	r.ValueOf(material.H2),
		"H3":	r.ValueOf(material.H3),
		"H4":	r.ValueOf(material.H4),
		"H5":	r.ValueOf(material.H5),
		"H6":	r.ValueOf(material.H6),
		"IconButton":	r.ValueOf(material.IconButton),
		"Label":	r.ValueOf(material.Label),
		"Loader":	r.ValueOf(material.Loader),
		"NewTheme":	r.ValueOf(material.NewTheme),
		"ProgressBar":	r.ValueOf(material.ProgressBar),
		"RadioButton":	r.ValueOf(material.RadioButton),
		"Slider":	r.ValueOf(material.Slider),
		"Switch":	r.ValueOf(material.Switch),
	}, Types: map[string]r.Type{
		"ButtonLayoutStyle":	r.TypeOf((*material.ButtonLayoutStyle)(nil)).Elem(),
		"ButtonStyle":	r.TypeOf((*material.ButtonStyle)(nil)).Elem(),
		"CheckBoxStyle":	r.TypeOf((*material.CheckBoxStyle)(nil)).Elem(),
		"EditorStyle":	r.TypeOf((*material.EditorStyle)(nil)).Elem(),
		"IconButtonStyle":	r.TypeOf((*material.IconButtonStyle)(nil)).Elem(),
		"LabelStyle":	r.TypeOf((*material.LabelStyle)(nil)).Elem(),
		"LoaderStyle":	r.TypeOf((*material.LoaderStyle)(nil)).Elem(),
		"Palette":	r.TypeOf((*material.Palette)(nil)).Elem(),
		"ProgressBarStyle":	r.TypeOf((*material.ProgressBarStyle)(nil)).Elem(),
		"RadioButtonStyle":	r.TypeOf((*material.RadioButtonStyle)(nil)).Elem(),
		"SliderStyle":	r.TypeOf((*material.SliderStyle)(nil)).Elem(),
		"SwitchStyle":	r.TypeOf((*material.SwitchStyle)(nil)).Elem(),
		"Theme":	r.TypeOf((*material.Theme)(nil)).Elem(),
	}, 
	}
}
