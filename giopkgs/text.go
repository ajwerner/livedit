// this file was generated by gomacro command: import _i "gioui.org/text"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package giopkgs

import (
	r "reflect"
	"github.com/cosmos72/gomacro/imports"
	text "gioui.org/text"
	fixed "golang.org/x/image/math/fixed"
	io "io"
	op "gioui.org/op"
)

// reflection: allow interpreted code to import "gioui.org/text"
func init() {
	imports.Packages["gioui.org/text"] = imports.Package{
	Name: "text",
	Binds: map[string]r.Value{
		"Bold":	r.ValueOf(text.Bold),
		"End":	r.ValueOf(text.End),
		"Italic":	r.ValueOf(text.Italic),
		"Medium":	r.ValueOf(text.Medium),
		"Middle":	r.ValueOf(text.Middle),
		"NewCache":	r.ValueOf(text.NewCache),
		"Normal":	r.ValueOf(text.Normal),
		"Regular":	r.ValueOf(text.Regular),
		"Start":	r.ValueOf(text.Start),
	}, Types: map[string]r.Type{
		"Alignment":	r.TypeOf((*text.Alignment)(nil)).Elem(),
		"Cache":	r.TypeOf((*text.Cache)(nil)).Elem(),
		"Face":	r.TypeOf((*text.Face)(nil)).Elem(),
		"Font":	r.TypeOf((*text.Font)(nil)).Elem(),
		"FontFace":	r.TypeOf((*text.FontFace)(nil)).Elem(),
		"Layout":	r.TypeOf((*text.Layout)(nil)).Elem(),
		"Line":	r.TypeOf((*text.Line)(nil)).Elem(),
		"Shaper":	r.TypeOf((*text.Shaper)(nil)).Elem(),
		"Style":	r.TypeOf((*text.Style)(nil)).Elem(),
		"Typeface":	r.TypeOf((*text.Typeface)(nil)).Elem(),
		"Variant":	r.TypeOf((*text.Variant)(nil)).Elem(),
		"Weight":	r.TypeOf((*text.Weight)(nil)).Elem(),
	}, Proxies: map[string]r.Type{
		"Face":	r.TypeOf((*P_gioui_org_text_Face)(nil)).Elem(),
		"Shaper":	r.TypeOf((*P_gioui_org_text_Shaper)(nil)).Elem(),
	}, 
	}
}

// --------------- proxy for gioui.org/text.Face ---------------
type P_gioui_org_text_Face struct {
	Object	interface{}
	Layout_	func(_proxy_obj_ interface{}, ppem fixed.Int26_6, maxWidth int, txt io.Reader) ([]text.Line, error)
	Shape_	func(_proxy_obj_ interface{}, ppem fixed.Int26_6, str text.Layout) op.CallOp
}
func (P *P_gioui_org_text_Face) Layout(ppem fixed.Int26_6, maxWidth int, txt io.Reader) ([]text.Line, error) {
	return P.Layout_(P.Object, ppem, maxWidth, txt)
}
func (P *P_gioui_org_text_Face) Shape(ppem fixed.Int26_6, str text.Layout) op.CallOp {
	return P.Shape_(P.Object, ppem, str)
}

// --------------- proxy for gioui.org/text.Shaper ---------------
type P_gioui_org_text_Shaper struct {
	Object	interface{}
	Layout_	func(_proxy_obj_ interface{}, font text.Font, size fixed.Int26_6, maxWidth int, txt io.Reader) ([]text.Line, error)
	LayoutString_	func(_proxy_obj_ interface{}, font text.Font, size fixed.Int26_6, maxWidth int, str string) []text.Line
	Shape_	func(_proxy_obj_ interface{}, font text.Font, size fixed.Int26_6, layout text.Layout) op.CallOp
}
func (P *P_gioui_org_text_Shaper) Layout(font text.Font, size fixed.Int26_6, maxWidth int, txt io.Reader) ([]text.Line, error) {
	return P.Layout_(P.Object, font, size, maxWidth, txt)
}
func (P *P_gioui_org_text_Shaper) LayoutString(font text.Font, size fixed.Int26_6, maxWidth int, str string) []text.Line {
	return P.LayoutString_(P.Object, font, size, maxWidth, str)
}
func (P *P_gioui_org_text_Shaper) Shape(font text.Font, size fixed.Int26_6, layout text.Layout) op.CallOp {
	return P.Shape_(P.Object, font, size, layout)
}
