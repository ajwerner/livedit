// this file was generated by gomacro command: import _i "gioui.org/gpu"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package giopkgs

import (
	r "reflect"
	"github.com/cosmos72/gomacro/imports"
	gpu "gioui.org/gpu"
	op "gioui.org/op"
	image "image"
	color "image/color"
)

// reflection: allow interpreted code to import "gioui.org/gpu"
func init() {
	imports.Packages["gioui.org/gpu"] = imports.Package{
	Name: "gpu",
	Binds: map[string]r.Value{
		"New":	r.ValueOf(gpu.New),
	}, Types: map[string]r.Type{
		"GPU":	r.TypeOf((*gpu.GPU)(nil)).Elem(),
	}, Proxies: map[string]r.Type{
		"GPU":	r.TypeOf((*P_gioui_org_gpu_GPU)(nil)).Elem(),
	}, 
	}
}

// --------------- proxy for gioui.org/gpu.GPU ---------------
type P_gioui_org_gpu_GPU struct {
	Object	interface{}
	Clear_	func(_proxy_obj_ interface{}, color color.NRGBA) 
	Collect_	func(_proxy_obj_ interface{}, viewport image.Point, frame *op.Ops) 
	Frame_	func(interface{}) error
	Profile_	func(interface{}) string
	Release_	func(interface{}) 
}
func (P *P_gioui_org_gpu_GPU) Clear(color color.NRGBA)  {
	P.Clear_(P.Object, color)
}
func (P *P_gioui_org_gpu_GPU) Collect(viewport image.Point, frame *op.Ops)  {
	P.Collect_(P.Object, viewport, frame)
}
func (P *P_gioui_org_gpu_GPU) Frame() error {
	return P.Frame_(P.Object)
}
func (P *P_gioui_org_gpu_GPU) Profile() string {
	return P.Profile_(P.Object)
}
func (P *P_gioui_org_gpu_GPU) Release()  {
	P.Release_(P.Object)
}
