// this file was generated by gomacro command: import _i "gioui.org/io/event"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package giopkgs

import (
	r "reflect"
	"github.com/cosmos72/gomacro/imports"
	event "gioui.org/io/event"
)

// reflection: allow interpreted code to import "gioui.org/io/event"
func init() {
	imports.Packages["gioui.org/io/event"] = imports.Package{
	Name: "event",
	Types: map[string]r.Type{
		"Event":	r.TypeOf((*event.Event)(nil)).Elem(),
		"Queue":	r.TypeOf((*event.Queue)(nil)).Elem(),
		"Tag":	r.TypeOf((*event.Tag)(nil)).Elem(),
	}, Proxies: map[string]r.Type{
		"Event":	r.TypeOf((*P_gioui_org_io_event_Event)(nil)).Elem(),
		"Queue":	r.TypeOf((*P_gioui_org_io_event_Queue)(nil)).Elem(),
	}, 
	}
}

// --------------- proxy for gioui.org/io/event.Event ---------------
type P_gioui_org_io_event_Event struct {
	Object	interface{}
	ImplementsEvent_	func(interface{}) 
}
func (P *P_gioui_org_io_event_Event) ImplementsEvent()  {
	P.ImplementsEvent_(P.Object)
}

// --------------- proxy for gioui.org/io/event.Queue ---------------
type P_gioui_org_io_event_Queue struct {
	Object	interface{}
	Events_	func(_proxy_obj_ interface{}, t event.Tag) []event.Event
}
func (P *P_gioui_org_io_event_Queue) Events(t event.Tag) []event.Event {
	return P.Events_(P.Object, t)
}
